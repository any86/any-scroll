import { Input, Computed, ComputeWrapFunction } from '@any-touch/shared';
import { _$recognizerstatus } from '@any-touch/shared';
export { default as recognizeForPressMoveLike } from './recognizeForPressMoveLike';
export { default as resetStatusForPressMoveLike } from './resetStatusForPressMoveLike';
declare type Options = {
    name: string;
    [k: string]: any;
};
export default abstract class {
    name: string;
    disabled: boolean;
    _$isRecognized: boolean;
    status: _$recognizerstatus;
    options: Options;
    computeFunctions: ComputeWrapFunction[];
    constructor(options: Options);
    /**
     * 设置识别器
     * @param options 选项
     */
    set(options?: Partial<Options>): this;
    /**
     * 验证触点数量
     * @param pointLength 触点数
     */
    protected _$isValidPointLength(pointLength: number): boolean;
    /**
     * 适用于大部分移动类型的手势,
     * 如pan/rotate/pinch/swipe
     * @param computed 计算值
     */
    abstract recognize(computed: Computed, callback: (type: string, ...payload: any[]) => void): void;
    /**
     * 校验输入数据
     * @param {Input} 计算数据
     * @returns {Boolean} 校验结果
     */
    abstract _$test(input: Input): boolean;
}
