import { __extends, __assign } from 'tslib';
import { INPUT_END } from '@any-touch/shared';
import { ComputeDistance, ComputeVAndDir, ComputeMaxLength } from '@any-touch/compute';
import Recognizer from '@any-touch/recognizer';

var DEFAULT_OPTIONS = {
    name: 'swipe',
    threshold: 10,
    velocity: 0.3,
    pointLength: 1,
};
var default_1 = (function (_super) {
    __extends(default_1, _super);
    function default_1(options) {
        var _this = _super.call(this, __assign(__assign({}, DEFAULT_OPTIONS), options)) || this;
        _this.computeFunctions = [ComputeDistance, ComputeVAndDir, ComputeMaxLength];
        return _this;
    }
    default_1.prototype._$test = function (computed) {
        if (INPUT_END !== computed.stage)
            return false;
        var velocityX = computed.velocityX, velocityY = computed.velocityY, maxPointLength = computed.maxPointLength, distance = computed.distance;
        return this.options.pointLength === maxPointLength &&
            this.options.threshold < distance &&
            this.options.velocity < Math.max(velocityX, velocityY);
    };
    default_1.prototype.recognize = function (computed, emit) {
        if (this._$test(computed)) {
            emit(this.options.name);
            emit(this.options.name + computed.direction);
        }
    };
    return default_1;
}(Recognizer));

export default default_1;
