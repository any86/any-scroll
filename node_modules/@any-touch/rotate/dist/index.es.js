import { __extends, __assign } from 'tslib';
import { ComputeAngle } from '@any-touch/compute';
import Recognizer, { recognizeForPressMoveLike } from '@any-touch/recognizer';

var DEFAULT_OPTIONS = {
    name: 'rotate',
    threshold: 0,
    pointLength: 2,
};
var default_1 = (function (_super) {
    __extends(default_1, _super);
    function default_1(options) {
        var _this = _super.call(this, __assign(__assign({}, DEFAULT_OPTIONS), options)) || this;
        _this.computeFunctions = [ComputeAngle];
        return _this;
    }
    default_1.prototype._$test = function (computed) {
        var pointLength = computed.pointLength, angle = computed.angle;
        return this._$isValidPointLength(pointLength) && (this.options.threshold < Math.abs(angle) || this._$isRecognized);
    };
    default_1.prototype.recognize = function (computed, emit) {
        recognizeForPressMoveLike(this, computed, emit);
    };
    return default_1;
}(Recognizer));

export default default_1;
