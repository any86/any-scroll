var ObjectToString = Object.prototype.toString;
function isRegExp(input) {
    return '[object RegExp]' === ObjectToString.call(input);
}
function isFunction(input) {
    return '[object Function]' === ObjectToString.call(input);
}

var IS_WX = !!window.wx;
var CLIENT_X = 'clientX';
var CLIENT_Y = 'clientY';
var COMPUTE_INTERVAL = 16;
var INPUT_START = 'start';
var INPUT_MOVE = 'move';
var INPUT_CANCEL = 'cancel';
var INPUT_END = 'end';
var DIRECTION_LEFT = 'left';
var DIRECTION_RIGHT = 'right';
var DIRECTION_UP = 'up';
var DIRECTION_DOWN = 'down';
var NONE = 'none';
var TOUCH = 'touch';
var MOUSE = 'mouse';
var TOUCH_START = TOUCH + INPUT_START;
var TOUCH_MOVE = TOUCH + INPUT_MOVE;
var TOUCH_END = TOUCH + INPUT_END;
var TOUCH_CANCEL = TOUCH + INPUT_CANCEL;
var MOUSE_UP = MOUSE + DIRECTION_UP;
var MOUSE_MOVE = MOUSE + INPUT_MOVE;
var MOUSE_DOWN = MOUSE + DIRECTION_DOWN;
var STATUS_POSSIBLE = 'p';
var STATUS_START = INPUT_START;
var STATUS_MOVE = INPUT_MOVE;
var STATUS_END = INPUT_END;
var STATUS_RECOGNIZED = 'r';
var STATUS_FAILED = 'f';
var STATUS_CANCELLED = INPUT_CANCEL;

function round2(n) {
    return Math.round(n * 100) / 100;
}

export { CLIENT_X, CLIENT_Y, COMPUTE_INTERVAL, DIRECTION_DOWN, DIRECTION_LEFT, DIRECTION_RIGHT, DIRECTION_UP, INPUT_CANCEL, INPUT_END, INPUT_MOVE, INPUT_START, IS_WX, MOUSE, MOUSE_DOWN, MOUSE_MOVE, MOUSE_UP, NONE, STATUS_CANCELLED, STATUS_END, STATUS_FAILED, STATUS_MOVE, STATUS_POSSIBLE, STATUS_RECOGNIZED, STATUS_START, TOUCH, TOUCH_CANCEL, TOUCH_END, TOUCH_MOVE, TOUCH_START, isFunction, isRegExp, round2 };
